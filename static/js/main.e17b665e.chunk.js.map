{"version":3,"sources":["Components/HomepageLayout.js","Components/NavTabs.js","Components/pages/About.js","Components/pages/Projects.js","App.js","index.js"],"names":["HomepageHeading","createMedia","breakpoints","mobile","tablet","computer","MediaContextProvider","Container","text","Header","as","content","style","fontSize","fontWeight","marginBottom","marginTop","fontFamily","color","Component","NavTabs","currentPage","handlePageChange","alignLinks","id","menuIcon","backgroundColor","options","draggable","edge","inDuration","onCloseEnd","onCloseStart","onOpenEnd","onOpenStart","outDuration","preventScrolling","href","onClick","className","About","Projects","carouselId","images","dist","duration","fullWidth","indicators","noWrap","numVisible","onCycleTo","padding","shift","App","useState","setCurrentPage","page","HomepageLayout","ReactDOM","render","document","getElementById"],"mappings":"6RAsBMA,GAT4BC,sBAAY,CAC5CC,YAAa,CACXC,OAAQ,EACRC,OAAQ,IACRC,SAAU,QAJNC,qBASgB,SAAC,GAAD,IAAGH,EAAH,EAAGA,OAAH,OACtB,eAACI,EAAA,EAAD,CAAWC,MAAI,EAAf,UAEE,cAACC,EAAA,EAAD,CACEC,GAAG,KACHC,QAAQ,iBACRC,MAAO,CACLC,SAAUV,EAAS,MAAQ,MAC3BW,WAAY,SACZC,aAAc,EACdC,UAAWb,EAAS,QAAU,MAC9Bc,WAAY,sBACZC,MAAO,aAGX,cAACT,EAAA,EAAD,CACEC,GAAG,KACHC,QAAQ,sCACRC,MAAO,CACLC,SAAUV,EAAS,QAAU,QAC7BW,WAAY,SACZE,UAAWb,EAAS,QAAU,QAC9Bc,WAAY,sBACZC,MAAO,kBAqEAlB,GA5DemB,YAoBCA,YAwChBnB,G,gBClEAoB,MAzCf,YAAqD,IAAlCC,EAAiC,EAAjCA,YAAaC,EAAoB,EAApBA,iBAC5B,OAEI,cADF,CACG,SAAD,CACIC,WAAW,QAEXC,GAAG,aACHC,SAAU,cAAC,OAAD,mBACVb,MAAO,CACHc,gBAAgB,WAEpBC,QAAS,CACTC,WAAW,EACXC,KAAM,OACNC,WAAY,IACZC,WAAY,KACZC,aAAc,KACdC,UAAW,KACXC,YAAa,KACbC,YAAa,IACbC,kBAAkB,GAjBtB,UAoBN,cAAC,UAAD,CAASC,KAAK,SAASC,QAAS,kBAAMhB,EAAiB,UACpDiB,UAA2B,UAAhBlB,EAA0B,kBAAoB,WAD5D,mBAGA,cAAC,UAAD,CAASgB,KAAK,YAAYC,QAAS,kBAAMhB,EAAiB,aACvDiB,UAA2B,aAAhBlB,EAA6B,kBAAoB,WAD/D,sBAGA,cAAC,UAAD,CAASgB,KAAK,WAAWC,QAAS,kBAAMhB,EAAiB,YACtDiB,UAA2B,YAAhBlB,EAA4B,kBAAoB,WAD9D,qBAGA,cAAC,UAAD,CAASgB,KAAK,QAAQC,QAAS,kBAAMhB,EAAiB,SACnDiB,UAA2B,SAAhBlB,EAAyB,kBAAoB,WAD3D,sBCnCa,SAASmB,IACtB,OACE,gCACE,+CACA,uEACC,4MAGC,kVAID,iVAIC,sVAIA,iH,qBCGOC,EAvBE,kBACjB,cAAC,WAAD,CACEC,WAAW,cACXC,OAAQ,CACN,wCACA,wCACA,wCACA,wCACA,yCAEFhB,QAAS,CACPiB,MAAO,IACPC,SAAU,IACVC,WAAW,EACXC,YAAY,EACZC,QAAQ,EACRC,WAAY,EACZC,UAAW,KACXC,QAAS,EACTC,MAAO,MCbI,SAASC,IACtB,MAAsCC,mBAAS,QAA/C,mBAAOjC,EAAP,KAAoBkC,EAApB,KAkBF,OACE,gCAEE,cAAC,EAAD,CAASlC,YAAaA,EAAaC,iBALd,SAACkC,GAAD,OAAUD,EAAeC,MAZ5B,SAAhBnC,EACK,cAACoC,EAAD,IAEW,UAAhBpC,EACK,cAACmB,EAAD,IAEW,aAAhBnB,EACK,cAAC,EAAD,IAEF,cAAC,IAAD,O,OCfTqC,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,U","file":"static/js/main.e17b665e.chunk.js","sourcesContent":["/* eslint-disable max-classes-per-file */\n/* eslint-disable react/no-multi-comp */\n\nimport { createMedia } from '@artsy/fresnel'\nimport PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport {\n  \n  Container,\n  Header,\n  Segment,\n} from 'semantic-ui-react'\n\nconst { MediaContextProvider, } = createMedia({\n  breakpoints: {\n    mobile: 0,\n    tablet: 768,\n    computer: 1024,\n  },\n})\n\n\nconst HomepageHeading = ({ mobile}) => (\n  <Container text\n  >\n    <Header\n      as='h1'\n      content='KS Development'\n      style={{\n        fontSize: mobile ? '2em' : '4em',\n        fontWeight: 'normal',\n        marginBottom: 0,\n        marginTop: mobile ? '1.5em' : '3em',\n        fontFamily: 'Mr Bedfort, cursive',\n        color: '#eaeef0',     \n      }}\n    />\n    <Header\n      as='h2'\n      content='Every day is a chance to be better.'\n      style={{\n        fontSize: mobile ? '1.5em' : '1.7em',\n        fontWeight: 'normal',\n        marginTop: mobile ? '0.5em' : '1.5em',\n        fontFamily: 'Mr Bedfort, cursive',\n        color: '#eaeef0',\n      }}\n    />\n  </Container>\n)\nHomepageHeading.propTypes = {\n    mobile: PropTypes.bool,\n}\n\nclass MobileContainer extends Component {\n  state = {}\n  render() {\n    \n    const { children } = this.props\n\n    return (\n      <Segment\n              inverted\n              textAlign='center'\n              style={{ minHeight: 350, padding: '1em 0em' }}\n              vertical>\n              <HomepageHeading mobile />\n              {children}\n        </Segment>\n    )\n  }\n}\n\n\nclass DesktopContainer extends Component {\n  state = {}\n  render() {\n    const { children } = this.props\n    return (\n  \n          <Segment\n            inverted\n            textAlign='center'\n            style={{ minHeight: 700, padding: '1em 0em' }}\n            vertical>\n            <HomepageHeading mobile />\n            {children}\n          </Segment>\n         \n          )\n          }\n  }\nDesktopContainer.propTypes = {\n  children: PropTypes.node,\n}    \n\n\nconst ResponsiveContainer = ({ children }) => (\n  /* Heads up!\n   * For large applications it may not be best option to put all page into these containers at\n   * they will be rendered twice for SSR.\n   */\n  <MediaContextProvider>\n    <DesktopContainer>{children}</DesktopContainer>\n    <MobileContainer>{children}</MobileContainer>\n  </MediaContextProvider>\n)\n\nResponsiveContainer.propTypes = {\n  children: PropTypes.node,\n}\n\n\n\nexport default HomepageHeading","import React from 'react'\nimport 'materialize-css';\nimport { Navbar , NavItem , Icon } from 'react-materialize';\n\n\n\n\nfunction NavTabs({ currentPage, handlePageChange }) {\n    return (\n      //<!-- Navigation bar for full screen -->\n        <Navbar\n            alignLinks=\"right\"\n            // brand={<a className=\"brand-logo\" href=\"#\">Logo</a>}\n            id=\"mobile-nav\"\n            menuIcon={<Icon>menu</Icon>}\n            style={{\n                backgroundColor:'#2f566f'\n              }} \n            options={{\n            draggable: true,\n            edge: 'left',\n            inDuration: 250,\n            onCloseEnd: null,\n            onCloseStart: null,\n            onOpenEnd: null,\n            onOpenStart: null,\n            outDuration: 200,\n            preventScrolling: true\n  }}\n>\n  <NavItem href=\"#About\" onClick={() => handlePageChange('About')}\n     className={currentPage === 'About' ? 'nav-link active' : 'nav-link'}>About\n  </NavItem>\n  <NavItem href=\"#Projects\" onClick={() => handlePageChange('Projects')}\n     className={currentPage === 'Projects' ? 'nav-link active' : 'nav-link'}>Projects\n  </NavItem>\n  <NavItem href=\"#Contact\" onClick={() => handlePageChange('Contact')}\n     className={currentPage === 'Contact' ? 'nav-link active' : 'nav-link'}>Contact\n  </NavItem>\n  <NavItem href=\"#Home\" onClick={() => handlePageChange('Home')}\n     className={currentPage === 'Home' ? 'nav-link active' : 'nav-link'}>Home\n  </NavItem>\n</Navbar>\n\n\n);\n}\n\nexport default NavTabs;\n\n\n","import React from 'react';\nimport 'materialize-css';\n//import { Navbar , NavItem , Icon } from 'react-materialize';\n\nexport default function About() {\n  return (\n    <div>\n      <h1>About Me Page</h1>\n      <p> Thank you for reviewing my portfolio.</p>\n       <p>\n        Most of my career comes from an Administrative Assistant and Sales background. \n        This has given me an eye for detail and I am able to coordinate multiple projects at a time.</p>\n        <p>\n        I transitioned from sales into the IT side of business a couple years ago. This opened my eyes to a whole new world that \n        I wanted to learn and know more about.  My role as an IT Coordinator was to communicate between the company I worked \n        for and the 3rd party company that handled their network structure.</p>\n       <p>\n        When I walked into the position not understanding the fundamentals of networking. Over the course of a year \n        I was able to turn the department around and streamline information properly. Going into my second year; \n        I decided I wanted to learn more...so I enrolled in Rice’s Full Stack Coding Bootcamp.</p>\n        <p>\n        I ended up quitting my job of 8 years and decided to dedicate my time to the coursework. \n        I (laughingly) thought it would be easy to stay at home with my 3 year old son and be able to get all my work done… \n        Did you know that children are needy? I look forward to working on more projects and learning more.</p>\n        <p>\n        You can do anything as long as you have inspiration and are driven to succeed\n      </p>\n    </div>\n  );\n}\n\n","import React from 'react'\nimport 'materialize-css';\nimport { Carousel } from 'react-materialize';\n\nconst Projects = () => (\n<Carousel\n  carouselId=\"Carousel-34\"\n  images={[\n    'https://picsum.photos/200/300?image=0',\n    'https://picsum.photos/200/300?image=1',\n    'https://picsum.photos/200/300?image=2',\n    'https://picsum.photos/200/300?image=3',\n    'https://picsum.photos/200/300?image=4'\n  ]}\n  options={{\n    dist: -100,\n    duration: 200,\n    fullWidth: false,\n    indicators: false,\n    noWrap: false,\n    numVisible: 5,\n    onCycleTo: null,\n    padding: 0,\n    shift: 0\n  }}\n/>\n)\nexport default Projects","import React, { useState } from 'react';\nimport 'semantic-ui-less/semantic.less';\nimport './App.css';\nimport HomepageLayout from './Components/HomepageLayout.js';\nimport NavTabs from './Components/NavTabs.js';\nimport About from './Components/pages/About.js';\nimport Contact from './Components/pages/Contact.js';\nimport Projects from './Components/pages/Projects.js';\n\n\nexport default function App(){\n  const [currentPage, setCurrentPage] = useState('Home');\n\n//This method is checking to see what the value of `currentPage` is. Depending on the value of currentPage, we return the corresponding component to render.\nconst renderPage = () => {\n  if (currentPage === 'Home') {\n    return <HomepageLayout />;\n  }\n  if (currentPage === 'About') {\n    return <About />;\n  }\n  if (currentPage === 'Projects') {\n    return <Projects />;\n  }\n  return <Contact />;\n};\n\nconst handlePageChange = (page) => setCurrentPage(page);\n\nreturn (\n  <div>\n    {/* We are passing the currentPage from state and the function to update it */}\n    <NavTabs currentPage={currentPage} handlePageChange={handlePageChange} />\n    {/* Here we are calling the renderPage method which will return a component  */}\n    {renderPage()}\n  </div>\n);\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import reportWebVitals from './reportWebVitals';\nimport 'semantic-ui-less/semantic.less';\nimport 'materialize-css';\nimport 'materialize-css/dist/css/materialize.min.css'\n\nReactDOM.render(\n  //<React.StrictMode>\n    <App />,\n  //</React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}